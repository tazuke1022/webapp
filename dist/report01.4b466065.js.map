{"mappings":"A,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,W,E,C,E,E,C,E,E,E,iB,A,O,I,A,C,E,S,C,E,G,K,E,O,C,C,E,C,O,C,G,K,E,C,I,E,C,C,E,A,Q,C,C,E,C,I,E,C,G,E,Q,C,C,E,O,C,C,E,C,E,E,I,C,E,O,C,E,E,O,E,E,O,A,C,I,E,A,M,uB,E,I,O,E,I,C,mB,C,C,E,Q,C,S,C,C,C,E,C,C,E,C,C,E,E,iB,C,G,A,C,E,E,Q,A,E,Q,S,C,C,C,E,E,E,O,C,e,I,G,E,E,O,C,e,I,GCiBC,IAAA,EAAA,EAAA,S,E,E,SAMM,IAAM,EAAe,AAAA,CAAA,EAAA,EAAA,aAAY,AAAZ,IAEf,EAAe,AAAC,IAE3B,IAAM,EAAc,EAAM,eAAe,CACvC,CAAC,EAAE,SAAS,QAAQ,CAAC,QAAQ,CAAC,aAAa,EAAE,EAAM,eAAe,CAAC,CAAC,CAAG,KAAA,EAEnE,EAAgB,EAAc,aAAa,OAAO,CAAC,GAAe,KAGlE,CAAC,EAAe,EAAiB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,AAAmB,KAAA,IAAnB,EAAM,QAAQ,CAC/D,EAAM,QAAQ,CAAG,GAGb,EAAmB,AAAA,CAAA,EAAA,EAAA,MAAK,AAAL,EAAO,IAG1B,CAAC,EAAc,EAAgB,CAAG,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,IAG3C,CAAC,EAAM,EAAQ,CAAG,AAAA,CAAA,EAAA,EAAA,QAAO,AAAP,EAAS,MAG3B,EAAQ,UACZ,GAAI,CACF,EAAgB,IAChB,IAAM,EAAW,MAAM,MAAM,SAAU,CACrC,OAAQ,OACR,QAAS,CACP,eAAgB,kBAClB,EACA,KAAM,KAAK,SAAS,CAAC,CAEnB,SAAU,EACV,SAAU,EAAiB,OAAO,CAAC,KAAK,AAC1C,EACF,GACA,GAAI,CAAC,EAAS,EAAE,CAAE,CAEhB,GAAI,AAAoB,MAApB,EAAS,MAAM,CAEjB,MAAM,AAAI,MAAM,WAGhB,OAAM,AAAI,MAAM,CAAC,EAAE,EAAS,MAAM,CAAC,CAAC,EAAE,EAAS,UAAU,CAAC,CAAC,CAE/D,CAEA,IAAM,EAAO,M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","sources":["<anon>","src/js/Authenticate.jsx","src/js/report01.jsx","src/js/ToDoList.jsx","src/js/useLocalStorage.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire49ed\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire49ed\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\nparcelRegister(\"brsYM\", function(module, exports) {\n\n$parcel$export(module.exports, \"LoginContext\", () => $0cfbb9ccf2d9087e$export$a0806b2ebea0c4e);\n$parcel$export(module.exports, \"Authenticate\", () => $0cfbb9ccf2d9087e$export$3f934a281632646c);\n/**\r\n * 簡易ログイン機能\r\n * <Authenticate> ... </Authenticate>\r\n * \r\n * 未ログイン時: ログインの画面を表示する．\r\n * ログイン時：子要素を表示する．ならびにログオフボタンを上部に表示する．\r\n * \r\n * [自動ログインの実験的機能]\r\n * propsとして，username, passwordが渡されると，コンポーネントのマウント時に\r\n * 指定されたusernameとpasswordを使って自動的にログインを試みることにする．\r\n * ログアウトボタンは表示されない．\r\n * [開発支援用：localStorageにユーザ名を保存する機能]\r\n * propsに usernameSaveKey が指定されると，\r\n * usernameSaveKeyで指定された値をkeyとしてlocalStorageにユーザ名を保存する．\r\n * 保存されたユーザ名は，次回のマウント時に自動的に読み込まれ，ユーザ名に設定される．\r\n * その際には便宜的にpasswordはusernameと同じものに設定される．\r\n * ユーザはログインボタンをクリックすればログインされることになる．\r\n */ \nvar $c54Ow = parcelRequire(\"c54Ow\");\n\n\nvar $lbJE2 = parcelRequire(\"lbJE2\");\nconst $0cfbb9ccf2d9087e$export$a0806b2ebea0c4e = /*#__PURE__*/ (0, $lbJE2.createContext)();\nconst $0cfbb9ccf2d9087e$export$3f934a281632646c = (props)=>{\n    // localStorageに保存するユーザ名のキー\n    const usernameKey = props.usernameSaveKey ? `${document.location.pathname}#Authenticate${props.usernameSaveKey}` : undefined;\n    // localStorageからユーザ名を取得する．無ければ値をnullにする．\n    const savedUsername = usernameKey ? localStorage.getItem(usernameKey) : null;\n    // ユーザ名の入力\n    const [usernameInput, setUsernameInput] = (0, $lbJE2.useState)(props.username !== undefined ? props.username : savedUsername);\n    // passwordの入力 useRefを使って，値を取得する．\n    const passwordInputRef = (0, $lbJE2.useRef)(\"\");\n    // /loginにPOSTリクエストを送った際のエラーメッセージを表示する．\n    const [errorMessage, setErrorMessage] = (0, $lbJE2.useState)(\"\");\n    // ユーザ情報（usernameとtoken）を保持する．\n    const [user, setUser] = (0, $lbJE2.useState)(null);\n    // ログイン：loginのAPIを呼ぶ．\n    const login = async ()=>{\n        try {\n            setErrorMessage(\"\");\n            const response = await fetch(\"/login\", {\n                method: \"post\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    // username と password を渡す．\n                    username: usernameInput,\n                    password: passwordInputRef.current.value\n                })\n            });\n            if (!response.ok) {\n                // statusが200番台以外の時はエラーとして扱う．\n                if (response.status === 403) // Forbiddenエラーであれば，ログインエラーとして扱う．\n                throw new Error(\"\\u30ED\\u30B0\\u30A4\\u30F3\\u30FB\\u30A8\\u30E9\\u30FC\");\n                else // それ以外であれば，statusコードとstatusテキストをエラーとして表示することにする．\n                throw new Error(`${response.status} ${response.statusText}`);\n            }\n            // ユーザ情報（usernameとtoken）がJSONレスポンスとして返ってくるので，これをuserに保存する．\n            const data = await response.json();\n            setUser(data);\n            // ユーザ名をlocalStorageに保存する．\n            if (usernameKey !== undefined) localStorage.setItem(usernameKey, usernameInput);\n        } catch (error) {\n            setErrorMessage(error.message);\n            // エラーの場合は，ユーザ情報を削除することにする．\n            setUser(null);\n            if (usernameKey !== undefined) localStorage.removeItem(usernameKey);\n        }\n    };\n    // ログアウト：ユーザ情報を削除する．\n    const logout = ()=>{\n        setUser(null);\n        if (usernameKey !== undefined) localStorage.removeItem(usernameKey);\n    };\n    // 実験的な自動ログイン機能\n    (0, $lbJE2.useEffect)(()=>{\n        // usernameとpasswordがpropsに指定されている時には自動ログインを行うことにする．\n        if (props.username !== undefined && props.password !== undefined) {\n            // passwordを設定する．\n            passwordInputRef.current.value = props.password;\n            // ログインを試みる．\n            login();\n        } else if (usernameKey !== undefined) {\n            // ユーザ名をlocalStorageから取得する．\n            const username = localStorage.getItem(usernameKey);\n            if (username !== null) {\n                // 便宜的にpasswordをusernameと同じものに設定する．\n                passwordInputRef.current.value = username;\n                // ユーザ名を設定する．\n                setUsernameInput(username);\n            // 自動的にログインする場合は，loginを呼ぶ．\n            // login();\n            }\n        }\n    }, []);\n    return user ? /*#__PURE__*/ (0, $c54Ow.jsxs)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0, $c54Ow.jsxs)(\"div\", {\n                className: \"authenticate-logout\",\n                children: [\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"span\", {\n                        children: [\n                            \"User: \",\n                            user ? user.username : \"\"\n                        ]\n                    }),\n                    props.username !== undefined && props.password !== undefined ? null : /*#__PURE__*/ (0, $c54Ow.jsx)(\"button\", {\n                        type: \"button\",\n                        onClick: logout,\n                        children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $c54Ow.jsx)($0cfbb9ccf2d9087e$export$a0806b2ebea0c4e.Provider, {\n                value: user,\n                children: props.children\n            })\n        ]\n    }) : /*#__PURE__*/ (0, $c54Ow.jsxs)(\"div\", {\n        children: [\n            /*#__PURE__*/ (0, $c54Ow.jsxs)(\"div\", {\n                className: \"authenticate-login\",\n                children: [\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"label\", {\n                        children: [\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                children: \"\\u30E6\\u30FC\\u30B6\\u540D:\"\n                            }),\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                children: /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                                    type: \"text\",\n                                    placeholder: \"\\u30E6\\u30FC\\u30B6\\u540D\",\n                                    onChange: (event)=>setUsernameInput(event.target.value),\n                                    value: usernameInput\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"label\", {\n                        children: [\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                children: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9:\"\n                            }),\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                children: /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                                    type: \"password\",\n                                    ref: passwordInputRef,\n                                    placeholder: \"\\u30D1\\u30B9\\u30EF\\u30FC\\u30C9\",\n                                    defaultValue: \"\"\n                                })\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsx)(\"button\", {\n                        type: \"button\",\n                        onClick: login,\n                        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n                    })\n                ]\n            }),\n            /*#__PURE__*/ (0, $c54Ow.jsx)(\"div\", {\n                children: errorMessage === \"\" ? null : /*#__PURE__*/ (0, $c54Ow.jsx)(\"div\", {\n                    className: \"error-message\",\n                    onClick: ()=>setErrorMessage(\"\"),\n                    children: errorMessage\n                })\n            })\n        ]\n    });\n};\n\n});\n\n/**\r\n * 第１回レポート課題用のJSXファイル\r\n */ // React DOMの関数をimportする．\n\nvar $c54Ow = parcelRequire(\"c54Ow\");\n\nvar $eKYsq = parcelRequire(\"eKYsq\");\n\nvar $aFIWk = parcelRequire(\"aFIWk\");\n// コンポーネントの定義\n\nvar $c54Ow = parcelRequire(\"c54Ow\");\n\n\nvar $lbJE2 = parcelRequire(\"lbJE2\");\n\nvar $brsYM = parcelRequire(\"brsYM\");\n/**\r\n * localStorageに値を保存するフック\r\n * \r\n * const [var, setVar] = useLocalStorage(key, initValue);\r\n */ \nvar $lbJE2 = parcelRequire(\"lbJE2\");\nconst $e6d2ad60a83f082d$export$86e2cef2561044ac = (key, initValue)=>{\n    const savedValue = localStorage.getItem(key);\n    const [variable, setter] = (0, $lbJE2.useState)(savedValue === null ? typeof initValue === \"function\" ? initValue() : initValue : JSON.parse(savedValue));\n    (0, $lbJE2.useEffect)(()=>{\n        localStorage.setItem(key, JSON.stringify(variable));\n    }, [\n        variable\n    ]);\n    return [\n        variable,\n        setter\n    ];\n};\n\n\nconst $efbe0047fb07abaf$var$today = new Date();\nconst $efbe0047fb07abaf$var$year = $efbe0047fb07abaf$var$today.getFullYear();\nconst $efbe0047fb07abaf$var$month = $efbe0047fb07abaf$var$today.getMonth() + 1;\nconst $efbe0047fb07abaf$var$day = $efbe0047fb07abaf$var$today.getDate();\nconst $efbe0047fb07abaf$var$todayStr = `${$efbe0047fb07abaf$var$year.toString()}-${$efbe0047fb07abaf$var$month.toString().padStart(2, \"0\")}-${$efbe0047fb07abaf$var$day.toString().padStart(2, \"0\")}`;\nconst $efbe0047fb07abaf$export$d3eab3925e9ddc7d = (props)=>{\n    const [taskList, setTaskList] = (0, $lbJE2.useState)([]);\n    const [errorMessage, setErrorMessage] = (0, $lbJE2.useState)(\"\");\n    const [taskInput, setTaskInput] = (0, $lbJE2.useState)(\"\");\n    const user = (0, $lbJE2.useContext)((0, $brsYM.LoginContext));\n    const authHeader = user ? {\n        \"Authorization\": \"Bearer \" + user.token\n    } : {};\n    const deadlineInputRef = (0, $lbJE2.useRef)(null);\n    const priorityInputRef = (0, $lbJE2.useRef)(null);\n    const [showCompleted, setShowCompleted] = (0, $e6d2ad60a83f082d$export$86e2cef2561044ac)(`${document.location.pathname}#ToDoList${props.url}-showCompleted`, true);\n    const [sortTaskList, setSortTaskList] = (0, $e6d2ad60a83f082d$export$86e2cef2561044ac)(`${document.location.pathname}#ToDoList${props.url}-sortTaskList`, false);\n    const [editingTask, setEditingTask] = (0, $lbJE2.useState)(null);\n    // 追加した機能\n    const [categories, setCategories] = (0, $lbJE2.useState)([\n        \"\\u4ED5\\u4E8B\",\n        \"\\u500B\\u4EBA\",\n        \"\\u305D\\u306E\\u4ED6\"\n    ]);\n    const [selectedCategory, setSelectedCategory] = (0, $lbJE2.useState)(\"\");\n    (0, $lbJE2.useEffect)(()=>{\n        const key = `${document.location.pathname}#ToDoList${props.url}-showCompleted`;\n        localStorage.setItem(key, JSON.stringify(showCompleted));\n    }, [\n        showCompleted\n    ]);\n    (0, $lbJE2.useEffect)(()=>{\n        // コンポーネントがマウントされたときにタスクリストを取得\n        getTaskList();\n    }, []);\n    const getTaskList = async ()=>{\n        try {\n            setErrorMessage(\"\");\n            // GETリクエストを送る．\n            const response = await fetch(props.url, {\n                method: \"GET\",\n                headers: authHeader\n            });\n            if (!response.ok) // statusが200番台以外の時はエラーとして扱う．\n            throw new Error(`${response.status} ${response.statusText}`);\n            // JSONレスポンスを取得する．\n            const data = await response.json();\n            setTaskList(data);\n        } catch (error) {\n            setErrorMessage(error.message);\n        }\n    };\n    const addTask = async ()=>{\n        const deadline = deadlineInputRef.current.value;\n        const priority = priorityInputRef.current.value;\n        try {\n            setErrorMessage(\"\");\n            // POSTリクエストを送る\n            const response = await fetch(props.url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    ...authHeader\n                },\n                body: JSON.stringify({\n                    description: taskInput,\n                    completed: false,\n                    // ログイン時にはタスクのプロパティにユーザ名を追加することにしている．\n                    ...user ? {\n                        username: user.username\n                    } : {},\n                    ...deadline ? {\n                        deadline: deadline\n                    } : {},\n                    priority: priority,\n                    category: selectedCategory\n                })\n            });\n            if (!response.ok) // statusが200番台以外の時はエラーとして扱う．\n            throw new Error(`${response.status} ${response.statusText}`);\n            // 入力エリアをクリアする．\n            setTaskInput(\"\");\n            deadlineInputRef.current.value = \"\";\n            priorityInputRef.current.value = \"0\";\n            // タスクリストを更新する．\n            getTaskList();\n        } catch (error) {\n            setErrorMessage(error.message);\n        }\n    };\n    const updateTask = async (updatedTask)=>{\n        try {\n            setErrorMessage(\"\");\n            // PUTリクエストを送る．\n            const response = await fetch(props.url + \"/\" + updatedTask._id, {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    ...authHeader\n                },\n                body: JSON.stringify(updatedTask)\n            });\n            if (!response.ok) // statusが200番台以外の時はエラーとして扱う．\n            throw new Error(`${response.status} ${response.statusText}`);\n            getTaskList();\n            setEditingTask(null);\n        } catch (error) {\n            setErrorMessage(error.message);\n        }\n    };\n    const deleteTask = async (task)=>{\n        try {\n            setErrorMessage(\"\");\n            // DELETEリクエストを送る．\n            const response = await fetch(props.url + \"/\" + task._id, {\n                method: \"DELETE\",\n                headers: authHeader\n            });\n            if (!response.ok) // statusが200番台以外の時はエラーとして扱う．\n            throw new Error(`${response.status} ${response.statusText}`);\n            // タスクリストを更新する．\n            getTaskList();\n        } catch (error) {\n            setErrorMessage(error.message);\n        }\n    };\n    const handleTaskInput = (event)=>{\n        setTaskInput(event.target.value);\n    };\n    const isTaskOverdue = (task)=>!task.completed && task.deadline && task.deadline < $efbe0047fb07abaf$var$todayStr;\n    const compareTask = (a, b)=>{\n        if (a[\"completed\"] === b[\"completed\"]) {\n            /* タスクの実行済か否かは同じ場合 */ const deadlineA = a[\"deadline\"] ? a[\"deadline\"] : \"9\";\n            const deadlineB = b[\"deadline\"] ? b[\"deadline\"] : \"9\";\n            if (deadlineA === deadlineB) {\n                /* 締切も同じ場合 */ if (a[\"priority\"] === b[\"priority\"]) return a[\"_id\"] < b[\"_id\"] ? -1 : 1;\n                else return a[\"priority\"] > b[\"priority\"] ? -1 : 1;\n            } else return deadlineA < deadlineB ? -1 : 1;\n        } else return !a[\"completed\"] ? -1 : 1;\n    };\n    const filteredTaskList = taskList.filter((task)=>showCompleted || !task[\"completed\"]);\n    const sortedTaskList = sortTaskList ? filteredTaskList.sort(compareTask) : filteredTaskList;\n    return /*#__PURE__*/ (0, $c54Ow.jsxs)(\"div\", {\n        className: \"todo-list\",\n        children: [\n            /*#__PURE__*/ (0, $c54Ow.jsxs)(\"div\", {\n                className: \"todo-list-head\",\n                children: [\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"span\", {\n                        onClick: getTaskList,\n                        children: [\n                            \"ToDo\\u30EA\\u30B9\\u30C8\",\n                            props.url\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"label\", {\n                        children: [\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                                type: \"checkbox\",\n                                checked: showCompleted,\n                                onChange: (e)=>{\n                                    setShowCompleted(e.target.checked);\n                                }\n                            }),\n                            \"\\u5B8C\\u4E86\\u6E08\\u306E\\u30BF\\u30B9\\u30AF\\u3082\\u8868\\u793A\"\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"label\", {\n                        children: [\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                                type: \"checkbox\",\n                                checked: sortTaskList,\n                                onChange: (e)=>{\n                                    setSortTaskList(e.target.checked);\n                                }\n                            }),\n                            \"\\u4E26\\u3079\\u66FF\\u3048\"\n                        ]\n                    })\n                ]\n            }),\n            sortedTaskList.length === 0 ? null : /*#__PURE__*/ (0, $c54Ow.jsx)(\"div\", {\n                className: \"todo-list-task-list\",\n                children: sortedTaskList.map((task)=>/*#__PURE__*/ (0, $c54Ow.jsx)(\"div\", {\n                        className: \"todo-list-task\" + (task[\"completed\"] ? \" todo-list-completed\" : \"\") + (isTaskOverdue(task) ? \" todo-list-overdue\" : \"\"),\n                        children: editingTask && editingTask._id === task._id ? /*#__PURE__*/ (0, $c54Ow.jsxs)((0, $c54Ow.Fragment), {\n                            children: [\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                                    type: \"text\",\n                                    value: editingTask.description,\n                                    onChange: (e)=>setEditingTask({\n                                            ...editingTask,\n                                            description: e.target.value\n                                        })\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsxs)(\"select\", {\n                                    value: editingTask.priority || \"0\",\n                                    onChange: (e)=>setEditingTask({\n                                            ...editingTask,\n                                            priority: e.target.value\n                                        }),\n                                    children: [\n                                        /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                            value: \"3\",\n                                            children: \"\\u2605\\u2605\\u2605\"\n                                        }),\n                                        /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                            value: \"2\",\n                                            children: \"\\u2605\\u2605\\u2606\"\n                                        }),\n                                        /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                            value: \"1\",\n                                            children: \"\\u2605\\u2606\\u2606\"\n                                        }),\n                                        /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                            value: \"0\",\n                                            children: \"\\u2606\\u2606\\u2606\"\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                                    className: \"todo-list-deadline\",\n                                    type: \"date\",\n                                    value: editingTask.deadline || \"\",\n                                    onChange: (e)=>setEditingTask({\n                                            ...editingTask,\n                                            deadline: e.target.value\n                                        })\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsxs)(\"select\", {\n                                    value: editingTask.category,\n                                    onChange: (e)=>setEditingTask({\n                                            ...editingTask,\n                                            category: e.target.value\n                                        }),\n                                    children: [\n                                        /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                            value: \"\\u4ED5\\u4E8B\",\n                                            children: \"\\u4ED5\\u4E8B\"\n                                        }),\n                                        /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                            value: \"\\u500B\\u4EBA\",\n                                            children: \"\\u500B\\u4EBA\"\n                                        }),\n                                        /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                            value: \"\\u305D\\u306E\\u4ED6\",\n                                            children: \"\\u305D\\u306E\\u4ED6\"\n                                        })\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"button\", {\n                                    onClick: ()=>updateTask(editingTask),\n                                    children: \"\\u4FDD\\u5B58\"\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"button\", {\n                                    onClick: ()=>setEditingTask(null),\n                                    children: \"\\u30AD\\u30E3\\u30F3\\u30BB\\u30EB\"\n                                })\n                            ]\n                        }) : /*#__PURE__*/ (0, $c54Ow.jsxs)((0, $c54Ow.Fragment), {\n                            children: [\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                                    type: \"checkbox\",\n                                    checked: task[\"completed\"],\n                                    onChange: (e)=>updateTask({\n                                            ...task,\n                                            completed: e.target.checked\n                                        })\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                    className: \"todo-list-description\",\n                                    children: task[\"description\"]\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                    className: \"todo-list-priority\",\n                                    children: [\n                                        \"\\u2606\\u2606\\u2606\",\n                                        \"\\u2605\\u2606\\u2606\",\n                                        \"\\u2605\\u2605\\u2606\",\n                                        \"\\u2605\\u2605\\u2605\"\n                                    ][task[\"priority\"]]\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                    className: \"todo-list-deadline\",\n                                    children: task[\"deadline\"]\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsxs)(\"span\", {\n                                    className: \"todo-list-username\",\n                                    children: [\n                                        \"\\u3010\",\n                                        task[\"username\"],\n                                        \"\\u3011\"\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsxs)(\"span\", {\n                                    className: \"todo-list-category\",\n                                    children: [\n                                        task[\"category\"] === \"\\u500B\\u4EBA\" ? /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                            className: \"circle-blue\",\n                                            children: \" \"\n                                        }) : task[\"category\"] === \"\\u4ED5\\u4E8B\" ? /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                            className: \"circle-orange\",\n                                            children: \" \"\n                                        }) : /*#__PURE__*/ (0, $c54Ow.jsx)(\"span\", {\n                                            className: \"circle-purple\",\n                                            children: \" \"\n                                        }),\n                                        task[\"category\"]\n                                    ]\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"button\", {\n                                    onClick: ()=>setEditingTask(task),\n                                    children: \"\\u7DE8\\u96C6\"\n                                }),\n                                /*#__PURE__*/ (0, $c54Ow.jsx)(\"button\", {\n                                    onClick: ()=>deleteTask(task),\n                                    children: \"\\u524A\\u9664\"\n                                })\n                            ]\n                        })\n                    }, task[\"_id\"]))\n            }),\n            /*#__PURE__*/ (0, $c54Ow.jsxs)(\"div\", {\n                className: \"todo-list-task-input\",\n                children: [\n                    /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                        type: \"text\",\n                        onChange: handleTaskInput,\n                        placeholder: \"\\u30BF\\u30B9\\u30AF\",\n                        value: taskInput\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"select\", {\n                        defaultValue: \"0\",\n                        ref: priorityInputRef,\n                        children: [\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                value: \"3\",\n                                children: \"\\u2605\\u2605\\u2605\"\n                            }),\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                value: \"2\",\n                                children: \"\\u2605\\u2605\\u2606\"\n                            }),\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                value: \"1\",\n                                children: \"\\u2605\\u2606\\u2606\"\n                            }),\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                value: \"0\",\n                                children: \"\\u2606\\u2606\\u2606\"\n                            })\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsxs)(\"select\", {\n                        value: selectedCategory,\n                        onChange: (e)=>setSelectedCategory(e.target.value),\n                        children: [\n                            /*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                value: \"\",\n                                children: \"\\u30AB\\u30C6\\u30B4\\u30EA\\u30FC\\u3092\\u9078\\u629E\"\n                            }),\n                            categories.map((category)=>/*#__PURE__*/ (0, $c54Ow.jsx)(\"option\", {\n                                    value: category,\n                                    children: category\n                                }, category))\n                        ]\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsx)(\"input\", {\n                        type: \"date\",\n                        ref: deadlineInputRef,\n                        defaultValue: \"\"\n                    }),\n                    /*#__PURE__*/ (0, $c54Ow.jsx)(\"button\", {\n                        type: \"button\",\n                        onClick: addTask,\n                        children: \"\\u8FFD\\u52A0\"\n                    })\n                ]\n            }),\n            errorMessage === \"\" ? null : /*#__PURE__*/ (0, $c54Ow.jsx)(\"div\", {\n                className: \"error-message\",\n                onClick: ()=>setErrorMessage(\"\"),\n                children: errorMessage\n            })\n        ]\n    });\n};\n\n\n\nvar $brsYM = parcelRequire(\"brsYM\");\n/* ここまで */ // ReactコンポーネントをidがrootであるDOM要素に配置する．\nconst $26362955e6066e4d$var$root = (0, $eKYsq.createRoot)(document.getElementById(\"root\"));\n$26362955e6066e4d$var$root.render(/*#__PURE__*/ (0, $c54Ow.jsxs)((0, $aFIWk.ErrorBoundary), {\n    children: [\n        /*#__PURE__*/ (0, $c54Ow.jsx)(\"p\", {\n            children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n        }),\n        /*#__PURE__*/ (0, $c54Ow.jsx)((0, $brsYM.Authenticate), {\n            usernameSaveKey: \"key1\",\n            children: /*#__PURE__*/ (0, $c54Ow.jsx)((0, $efbe0047fb07abaf$export$d3eab3925e9ddc7d), {\n                url: \"/todo-secure\"\n            })\n        }),\n        /*#__PURE__*/ (0, $c54Ow.jsx)(\"hr\", {})\n    ]\n}));\n\n\n//# sourceMappingURL=report01.4b466065.js.map\n","/**\r\n * 簡易ログイン機能\r\n * <Authenticate> ... </Authenticate>\r\n * \r\n * 未ログイン時: ログインの画面を表示する．\r\n * ログイン時：子要素を表示する．ならびにログオフボタンを上部に表示する．\r\n * \r\n * [自動ログインの実験的機能]\r\n * propsとして，username, passwordが渡されると，コンポーネントのマウント時に\r\n * 指定されたusernameとpasswordを使って自動的にログインを試みることにする．\r\n * ログアウトボタンは表示されない．\r\n * [開発支援用：localStorageにユーザ名を保存する機能]\r\n * propsに usernameSaveKey が指定されると，\r\n * usernameSaveKeyで指定された値をkeyとしてlocalStorageにユーザ名を保存する．\r\n * 保存されたユーザ名は，次回のマウント時に自動的に読み込まれ，ユーザ名に設定される．\r\n * その際には便宜的にpasswordはusernameと同じものに設定される．\r\n * ユーザはログインボタンをクリックすればログインされることになる．\r\n */\r\nimport '../css/Authenticate.css';\r\n\r\nimport { useState, useRef, createContext, useEffect } from 'react';\r\n\r\n// ユーザ情報を子要素に渡すために context を使用する．\r\nexport const LoginContext = createContext();\r\n\r\nexport const Authenticate = (props) => {\r\n  // localStorageに保存するユーザ名のキー\r\n  const usernameKey = props.usernameSaveKey ?\r\n    `${document.location.pathname}#Authenticate${props.usernameSaveKey}` : undefined;\r\n  // localStorageからユーザ名を取得する．無ければ値をnullにする．\r\n  const savedUsername = usernameKey ? localStorage.getItem(usernameKey) : null;\r\n\r\n  // ユーザ名の入力\r\n  const [usernameInput, setUsernameInput] = useState(props.username !== undefined ?\r\n    props.username : savedUsername);\r\n\r\n  // passwordの入力 useRefを使って，値を取得する．\r\n  const passwordInputRef = useRef('');\r\n\r\n  // /loginにPOSTリクエストを送った際のエラーメッセージを表示する．\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // ユーザ情報（usernameとtoken）を保持する．\r\n  const [user, setUser] = useState(null);\r\n\r\n  // ログイン：loginのAPIを呼ぶ．\r\n  const login = async () => {\r\n    try {\r\n      setErrorMessage('');\r\n      const response = await fetch('/login', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          // username と password を渡す．\r\n          username: usernameInput,\r\n          password: passwordInputRef.current.value\r\n        })\r\n      });\r\n      if (!response.ok) {\r\n        // statusが200番台以外の時はエラーとして扱う．\r\n        if (response.status === 403) {\r\n          // Forbiddenエラーであれば，ログインエラーとして扱う．\r\n          throw new Error('ログイン・エラー');\r\n        } else {\r\n          // それ以外であれば，statusコードとstatusテキストをエラーとして表示することにする．\r\n          throw new Error(`${response.status} ${response.statusText}`);\r\n        }\r\n      }\r\n      // ユーザ情報（usernameとtoken）がJSONレスポンスとして返ってくるので，これをuserに保存する．\r\n      const data = await response.json();\r\n      setUser(data);\r\n      // ユーザ名をlocalStorageに保存する．\r\n      if (usernameKey !== undefined) {\r\n        localStorage.setItem(usernameKey, usernameInput);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n      // エラーの場合は，ユーザ情報を削除することにする．\r\n      setUser(null);\r\n      if (usernameKey !== undefined) {\r\n        localStorage.removeItem(usernameKey);\r\n      }\r\n    }\r\n  };\r\n\r\n  // ログアウト：ユーザ情報を削除する．\r\n  const logout = () => {\r\n    setUser(null);\r\n    if (usernameKey !== undefined) {\r\n      localStorage.removeItem(usernameKey);\r\n    }\r\n  };\r\n\r\n  // 実験的な自動ログイン機能\r\n  useEffect(() => {\r\n    // usernameとpasswordがpropsに指定されている時には自動ログインを行うことにする．\r\n    if (props.username !== undefined && props.password !== undefined) {\r\n      // passwordを設定する．\r\n      passwordInputRef.current.value = props.password;\r\n      // ログインを試みる．\r\n      login();\r\n    } else if (usernameKey !== undefined) {\r\n      // ユーザ名をlocalStorageから取得する．\r\n      const username = localStorage.getItem(usernameKey);\r\n      if (username !== null) {\r\n        // 便宜的にpasswordをusernameと同じものに設定する．\r\n        passwordInputRef.current.value = username;\r\n        // ユーザ名を設定する．\r\n        setUsernameInput(username);\r\n        // 自動的にログインする場合は，loginを呼ぶ．\r\n        // login();\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (user ?\r\n    <div>\r\n      {/* ログインしている場合 */}\r\n      <div className=\"authenticate-logout\">\r\n        <span>User: {user ? user.username : ''}</span>\r\n        {/* 自動ログインの場合はログアウトボタンを表示しないことにする． */}\r\n        {(props.username !== undefined && props.password !== undefined) ? null :\r\n          <button type=\"button\" onClick={logout}>ログアウト</button>}\r\n      </div>\r\n      <LoginContext.Provider value={user}>\r\n        {/* userをLoginContextに渡すとともに，子要素を表示する． */}\r\n        {props.children}\r\n      </LoginContext.Provider>\r\n    </div>\r\n    :\r\n    <div>\r\n      {/* 未ログインの場合 */}\r\n      <div className=\"authenticate-login\">\r\n        <label>\r\n          <span>ユーザ名:</span>\r\n          <span><input type=\"text\" placeholder=\"ユーザ名\"\r\n            onChange={(event) => setUsernameInput(event.target.value)} value={usernameInput} />\r\n          </span>\r\n        </label>\r\n        <label>\r\n          <span>パスワード:</span>\r\n          <span><input type=\"password\" ref={passwordInputRef}\r\n            placeholder=\"パスワード\" defaultValue='' />\r\n          </span>\r\n        </label>\r\n        <button type=\"button\" onClick={login}>ログイン</button>\r\n      </div>\r\n      <div>\r\n        {errorMessage === '' ? null :\r\n          <div className=\"error-message\" onClick={() => setErrorMessage('')}>\r\n            {errorMessage}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n","/**\r\n * 第１回レポート課題用のJSXファイル\r\n */\r\n// React DOMの関数をimportする．\r\nimport { createRoot } from 'react-dom';\r\n\r\n// デバッグ用にエラー発生時にエラーメッセージを表示するコンポーネントで囲む．\r\nimport { ErrorBoundary } from './ErrorBoundary';\r\n\r\n// ToDoListのコンポーネントの定義をimportする．\r\n/* ここから */\r\nimport { ToDoList } from './ToDoList';\r\n\r\nimport { Authenticate } from './Authenticate';\r\n\r\n/* ここまで */\r\n\r\n// ReactコンポーネントをidがrootであるDOM要素に配置する．\r\nconst root = createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <ErrorBoundary>\r\n    {/* ここから */}\r\n    <p>ログイン</p>\r\n    <Authenticate usernameSaveKey=\"key1\">\r\n      <ToDoList url=\"/todo-secure\" />\r\n    </Authenticate>\r\n    <hr />\r\n    {/* <p>ログイン機能を使用しない場合</p>\r\n    <ToDoList url=\"/todo\" /> */}\r\n    {/* ここまで */}\r\n  </ErrorBoundary>\r\n);\r\n\r\n","// コンポーネントの定義\r\nimport '../css/ToDoList.css';\r\nimport { useState, useEffect, useContext, useRef } from 'react';\r\nimport { LoginContext } from './Authenticate';\r\nimport { useLocalStorage } from './useLocalStorage';\r\n\r\nconst today = new Date();\r\nconst year = today.getFullYear();\r\nconst month = today.getMonth() + 1;\r\nconst day = today.getDate();\r\nconst todayStr = `${year.toString()}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\r\n\r\nexport const ToDoList = (props) => {\r\n  const [taskList, setTaskList] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [taskInput, setTaskInput] = useState('');\r\n  const user = useContext(LoginContext);\r\n  const authHeader = user ? { 'Authorization': 'Bearer ' + user.token } : {};\r\n  const deadlineInputRef = useRef(null);\r\n  const priorityInputRef = useRef(null);\r\n\r\n  const [showCompleted, setShowCompleted] = useLocalStorage(\r\n    `${document.location.pathname}#ToDoList${props.url}-showCompleted`,\r\n    true\r\n  );\r\n\r\n  const [sortTaskList, setSortTaskList] = useLocalStorage(\r\n    `${document.location.pathname}#ToDoList${props.url}-sortTaskList`,\r\n    false\r\n  );\r\n\r\n  const [editingTask, setEditingTask] = useState(null);\r\n  // 追加した機能\r\n  const [categories, setCategories] = useState(['仕事', '個人', 'その他']);\r\n  const [selectedCategory, setSelectedCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    const key = `${document.location.pathname}#ToDoList${props.url}-showCompleted`;\r\n    localStorage.setItem(key, JSON.stringify(showCompleted));\r\n  }, [showCompleted]);\r\n\r\n  useEffect(() => {\r\n    // コンポーネントがマウントされたときにタスクリストを取得\r\n    getTaskList();\r\n  }, []);\r\n\r\n  const getTaskList = async () => {\r\n    try {\r\n      setErrorMessage('');\r\n      // GETリクエストを送る．\r\n      const response = await fetch(props.url, {\r\n        method: 'GET',\r\n        headers: authHeader\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // statusが200番台以外の時はエラーとして扱う．\r\n        throw new Error(`${response.status} ${response.statusText}`);\r\n      }\r\n      // JSONレスポンスを取得する．\r\n      const data = await response.json();\r\n      setTaskList(data);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const addTask = async () => {\r\n    const deadline = deadlineInputRef.current.value;\r\n    const priority = priorityInputRef.current.value;\r\n    try {\r\n      setErrorMessage('');\r\n      // POSTリクエストを送る\r\n      const response = await fetch(props.url, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...authHeader\r\n        },\r\n        body: JSON.stringify({\r\n          description: taskInput,\r\n          completed: false,\r\n          // ログイン時にはタスクのプロパティにユーザ名を追加することにしている．\r\n          ...(user ? { username: user.username } : {}),\r\n          ...(deadline ? { deadline } : {}),\r\n          priority,\r\n          category: selectedCategory, // カテゴリを追加\r\n        })\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // statusが200番台以外の時はエラーとして扱う．\r\n        throw new Error(`${response.status} ${response.statusText}`);\r\n      }\r\n      // 入力エリアをクリアする．\r\n      setTaskInput('');\r\n      deadlineInputRef.current.value = '';\r\n      priorityInputRef.current.value = '0';\r\n      // タスクリストを更新する．\r\n      getTaskList();\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const updateTask = async (updatedTask) => {\r\n    try {\r\n      setErrorMessage('');\r\n      // PUTリクエストを送る．\r\n      const response = await fetch(props.url + '/' + updatedTask._id, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...authHeader\r\n        },\r\n        body: JSON.stringify(updatedTask)\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // statusが200番台以外の時はエラーとして扱う．\r\n        throw new Error(`${response.status} ${response.statusText}`);\r\n      }\r\n\r\n      getTaskList();\r\n      setEditingTask(null);\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const deleteTask = async (task) => {\r\n    try {\r\n      setErrorMessage('');\r\n      // DELETEリクエストを送る．\r\n      const response = await fetch(props.url + '/' + task._id, {\r\n        method: 'DELETE',\r\n        headers: authHeader\r\n      });\r\n\r\n      if (!response.ok) {\r\n        // statusが200番台以外の時はエラーとして扱う．\r\n        throw new Error(`${response.status} ${response.statusText}`);\r\n      }\r\n      // タスクリストを更新する．\r\n      getTaskList();\r\n    } catch (error) {\r\n      setErrorMessage(error.message);\r\n    }\r\n  };\r\n\r\n  const handleTaskInput = (event) => {\r\n    setTaskInput(event.target.value);\r\n  };\r\n\r\n  const isTaskOverdue = (task) => !task.completed && task.deadline && task.deadline < todayStr;\r\n\r\n  const compareTask = (a, b) => {\r\n    if (a['completed'] === b['completed']) {\r\n      /* タスクの実行済か否かは同じ場合 */\r\n      const deadlineA = a['deadline'] ? a['deadline'] : '9';\r\n      const deadlineB = b['deadline'] ? b['deadline'] : '9';\r\n      if (deadlineA === deadlineB) {\r\n        /* 締切も同じ場合 */\r\n        if (a['priority'] === b['priority']) {\r\n          return a['_id'] < b['_id'] ? -1 : 1;\r\n        } else {\r\n          return a['priority'] > b['priority'] ? -1 : 1;\r\n        }\r\n      } else {\r\n        return deadlineA < deadlineB ? -1 : 1;\r\n      }\r\n    } else {\r\n      return !a['completed'] ? -1 : 1;\r\n    }\r\n  };\r\n\r\n  const filteredTaskList = taskList.filter(\r\n    (task) => (showCompleted || !task['completed'])\r\n  );\r\n\r\n  const sortedTaskList = sortTaskList\r\n    ? filteredTaskList.sort(compareTask)\r\n    : filteredTaskList;\r\n\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <div className=\"todo-list-head\">\r\n        <span onClick={getTaskList}>ToDoリスト{props.url}</span>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={showCompleted}\r\n            onChange={(e) => {\r\n              setShowCompleted(e.target.checked);\r\n            }}\r\n          />\r\n          完了済のタスクも表示\r\n        </label>\r\n        <label>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={sortTaskList}\r\n            onChange={(e) => {\r\n              setSortTaskList(e.target.checked);\r\n            }}\r\n          />\r\n          並べ替え\r\n        </label>\r\n      </div>\r\n      {sortedTaskList.length === 0 ? null : (\r\n        <div className=\"todo-list-task-list\">\r\n          {sortedTaskList.map((task) => (\r\n            <div key={task['_id']} className={\"todo-list-task\" +\r\n              (task['completed'] ? \" todo-list-completed\" : \"\") +\r\n              (isTaskOverdue(task) ? \" todo-list-overdue\" : \"\")} >\r\n              {/* 編集モードかどうかで表示を切り替える */}\r\n              {editingTask && editingTask._id === task._id ? (\r\n                <>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={editingTask.description}\r\n                    onChange={(e) =>\r\n                      setEditingTask({\r\n                        ...editingTask,\r\n                        description: e.target.value\r\n                      })\r\n                    }\r\n                  />\r\n                  <select\r\n                    value={editingTask.priority || '0'}\r\n                    onChange={(e) =>\r\n                      setEditingTask({\r\n                        ...editingTask,\r\n                        priority: e.target.value\r\n                      })\r\n                    }\r\n                  >\r\n                    <option value=\"3\">★★★</option>\r\n                    <option value=\"2\">★★☆</option>\r\n                    <option value=\"1\">★☆☆</option>\r\n                    <option value=\"0\">☆☆☆</option>\r\n                  </select>\r\n                  <input\r\n                    className=\"todo-list-deadline\"\r\n                    type=\"date\"\r\n                    value={editingTask.deadline || ''}\r\n                    onChange={(e) =>\r\n                      setEditingTask({\r\n                        ...editingTask,\r\n                        deadline: e.target.value\r\n                      })\r\n                    }\r\n                  />\r\n                  {/* カテゴリ-の選択を追加 */}\r\n                  <select\r\n                    value={editingTask.category}\r\n                    onChange={(e) =>\r\n                      setEditingTask({ ...editingTask, category: e.target.value })\r\n                    }\r\n                  >\r\n                    <option value=\"仕事\">仕事</option>\r\n                    <option value=\"個人\">個人</option>\r\n                    <option value=\"その他\">その他</option>\r\n                  </select>\r\n                  <button onClick={() => updateTask(editingTask)}>\r\n                    保存\r\n                  </button>\r\n                  <button onClick={() => setEditingTask(null)}>\r\n                    キャンセル\r\n                  </button>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={task['completed']}\r\n                    onChange={(e) =>\r\n                      updateTask({ ...task, completed: e.target.checked })\r\n                    }\r\n                  ></input>\r\n                  <span className=\"todo-list-description\">\r\n                    {task['description']}\r\n                  </span>\r\n                  <span className=\"todo-list-priority\">\r\n                    {['☆☆☆', '★☆☆', '★★☆', '★★★'][task['priority']]}\r\n                  </span>\r\n                  <span className=\"todo-list-deadline\">\r\n                    {task['deadline']}\r\n                  </span>\r\n                  <span className=\"todo-list-username\">\r\n                    【{task['username']}】\r\n                  </span>\r\n                  <span className=\"todo-list-category\">\r\n                    {task['category'] === '個人' ? (\r\n                      <span className=\"circle-blue\"> </span>\r\n                    ) : task['category'] === '仕事' ? (\r\n                      <span className=\"circle-orange\"> </span>\r\n                    ) : (\r\n                      <span className=\"circle-purple\"> </span>\r\n                    )}\r\n                    {task['category']}\r\n                  </span>\r\n\r\n                  <button onClick={() => setEditingTask(task)}>編集</button>\r\n                  <button onClick={() => deleteTask(task)}>削除</button>\r\n                </>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n      {/* 新規タスクの追加 */}\r\n      <div className=\"todo-list-task-input\">\r\n        <input\r\n          type=\"text\"\r\n          onChange={handleTaskInput}\r\n          placeholder=\"タスク\"\r\n          value={taskInput}\r\n        />\r\n        <select defaultValue=\"0\" ref={priorityInputRef}>\r\n          <option value=\"3\">★★★</option>\r\n          <option value=\"2\">★★☆</option>\r\n          <option value=\"1\">★☆☆</option>\r\n          <option value=\"0\">☆☆☆</option>\r\n        </select>\r\n        {/* 追加した機能 */}\r\n        <select value={selectedCategory} onChange={(e) => setSelectedCategory(e.target.value)}>\r\n          <option value=\"\">カテゴリーを選択</option>\r\n          {categories.map((category) => (\r\n            <option key={category} value={category}>{category}</option>\r\n          ))}\r\n        </select>\r\n        <input type=\"date\" ref={deadlineInputRef} defaultValue=\"\" />\r\n        <button type=\"button\" onClick={addTask}>\r\n          追加\r\n        </button>\r\n      </div>\r\n      {/* エラーメッセージの表示 */}\r\n      {errorMessage === '' ? null : (\r\n        <div className=\"error-message\" onClick={() => setErrorMessage('')}>\r\n          {errorMessage}\r\n        </div>\r\n      )}\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n","/**\r\n * localStorageに値を保存するフック\r\n * \r\n * const [var, setVar] = useLocalStorage(key, initValue);\r\n */\r\nimport { useState, useEffect } from 'react';\r\nexport const useLocalStorage = (key, initValue) => {\r\n  const savedValue = localStorage.getItem(key);\r\n  const [variable, setter] = useState(\r\n    savedValue === null ? (typeof initValue === 'function' ? initValue() : initValue) : JSON.parse(savedValue));\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(variable));\r\n  }, [variable])\r\n  return [variable, setter];\r\n};\r\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","parcelRegister","$0cfbb9ccf2d9087e$export$a0806b2ebea0c4e","$0cfbb9ccf2d9087e$export$3f934a281632646c","$c54Ow","$lbJE2","createContext","props","usernameKey","usernameSaveKey","document","location","pathname","undefined","savedUsername","localStorage","getItem","usernameInput","setUsernameInput","useState","username","passwordInputRef","useRef","errorMessage","setErrorMessage","user","setUser","login","response","fetch","method","headers","body","JSON","stringify","password","current","value","ok","status","statusText","data","json","setItem","error","message","removeItem","useEffect","jsxs","children","className","jsx","type","onClick","Provider","placeholder","onChange","event","target","ref","defaultValue","$eKYsq","$aFIWk","$brsYM","$e6d2ad60a83f082d$export$86e2cef2561044ac","key","initValue","savedValue","variable","setter","parse","$efbe0047fb07abaf$var$today","Date","$efbe0047fb07abaf$var$year","getFullYear","$efbe0047fb07abaf$var$month","getMonth","$efbe0047fb07abaf$var$day","getDate","$efbe0047fb07abaf$var$todayStr","toString","padStart","$26362955e6066e4d$var$root","createRoot","getElementById","render","ErrorBoundary","Authenticate","taskList","setTaskList","taskInput","setTaskInput","useContext","LoginContext","authHeader","token","deadlineInputRef","priorityInputRef","showCompleted","setShowCompleted","url","sortTaskList","setSortTaskList","editingTask","setEditingTask","categories","setCategories","selectedCategory","setSelectedCategory","getTaskList","addTask","deadline","priority","description","completed","category","updateTask","updatedTask","_id","deleteTask","task","isTaskOverdue","filteredTaskList","filter","sortedTaskList","sort","a","b","deadlineA","deadlineB","checked","length","map","Fragment"],"version":3,"file":"report01.4b466065.js.map"}